using UnityEngine;
using System;
using System.Collections;

public class MonsterHealth : MonoBehaviour
{
    private MonsterBlackBoard blackBoard;
    public event Action<int> OnHPChanged;  // Ï≤¥Î†• Î≥ÄÍ≤Ω Ïù¥Î≤§Ìä∏
    public event Action OnDeath;
    
    [SerializeField] private float noDamageCooldown = 0.5f;
    private void Start()
    { 
        blackBoard = GetComponent<MonsterBlackBoard>();
    }

    public void TakeDamage(int damage)
    {
        if (blackBoard.isMonsterDamaged) return;      //Ï§ëÎ≥µ ÌîºÍ≤© Î∞©ÏßÄ

        blackBoard.currentHP -= damage;
        
        if (blackBoard.currentHP <= 0)
        {
            OnDeath?.Invoke();
        }
        
        blackBoard.isMonsterDamaged = true;
        OnHPChanged?.Invoke(blackBoard.currentHP);
        StartCoroutine(Coroutine_ResetDamageState());
    }


    public void HandleDamageAnim()
    {
        if (blackBoard.isMonsterDamaged && !blackBoard.animator.GetCurrentAnimatorStateInfo(0).IsName("Damaged"))              // üî• `isDamaged`Í∞Ä trueÏù¥Î©¥ Ïï†ÎãàÎ©îÏù¥ÏÖò Ïã§ÌñâÌïòÎèÑÎ°ù ÏàòÏ†ï
        {
            blackBoard.animator.SetTrigger("Damaged");
        }   
    }

    IEnumerator Coroutine_ResetDamageState()
    {  
        yield return new WaitForSeconds(noDamageCooldown);
        blackBoard.isMonsterDamaged = false;
    }
}